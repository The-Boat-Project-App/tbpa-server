# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input Comment {
  author: String!
  content: String!
  date: DateTime!
}

type CommentObject {
  author: String!
  content: String!
  date: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type LocationObject {
  date: DateTime!
  description: String!
  latitude: Float!
  longitude: Float!
  name: String!
}

type LoginResponse {
  accessToken: String!
  avatar: String!
  email: String!
  firstName: String!
  lastName: String!
  refreshToken: String!
  status: String!
}

"""The Messages Model"""
type Messages {
  author: Users
  content: String
  createdAt: DateTime
  id: ID
  mainPicture: String
}

input MessagesInput {
  author: String
  content: String
  createdAt: DateTime
  id: ID
  mainPicture: String
}

type Mutation {
  addLikes(id: String!): String!
  createMessages(newMessagesInput: MessagesInput!): Messages!
  createNews(newNewsInput: NewsInput!): News!
  createNotes(newNotesInput: NotesInput!): Notes!
  createPosts(newPostsInput: PostsInput!): Posts!
  createThemes(newThemesInput: ThemesInput!): ThemeCreatedResponse!
  createUsers(newUsersInput: UsersInput!): RegisterResponse!
  deleteNews(id: String!): String!
  deleteNotes(id: String!): String!
  deletePosts(id: String!): String!
  deleteUsers(id: String!): String!
  loginUsers(UsersLoginInput: UsersInput!): LoginResponse!
  revokeRefreshTokensForUser(userId: String!): Boolean!
  updateNotes(editNotesInput: NotesInput!): Notes!
  updatePosts(editPostsInput: PostsInput!): Posts!
  updateTrip: Trip!
}

"""The News Model"""
type News {
  author: String!
  content: String
  createdAt: DateTime!
  id: ID!
  intro: String
  isActive: Boolean
  mainPicture: String
  title: String!
}

input NewsInput {
  author: String!
  content: String
  createdAt: DateTime
  id: ID
  intro: String
  isActive: Boolean
  mainPicture: String
  title: String!
}

"""The Notes Model"""
type Notes {
  backgroundColor: String
  createdAt: DateTime!
  description: String!
  id: ID!
  isArchived: Boolean
  title: String!
  updatedAt: DateTime!
}

input NotesInput {
  backgroundColor: String
  description: String!
  id: ID
  isArchived: Boolean
  title: String!
}

"""The Partners Model"""
type Partners {
  address: String
  city: String
  content: contentObject!
  country: String
  createdAt: DateTime!
  id: ID!
  intro: introObject!
  latitude: Float!
  logo: String
  longitude: Float!
  main_picture: String
  name: nameObject!
  website: String
}

"""The Posts Model"""
type Posts {
  author: Users!
  comments: [CommentObject!]!
  content: String
  createdAt: DateTime!
  id: ID!
  intro: String!
  likes: Float
  mainPicture: String
  submitted: Boolean
  title: String!
  validated: String
}

input PostsInput {
  author: String!
  comments: [Comment!]
  content: String
  createdAt: DateTime
  id: ID
  intro: String!
  likes: Float
  mainPicture: String
  submitted: Boolean
  title: String!
  validated: String
}

type Query {
  """Get List of All Draft Posts By User"""
  AllDraftPostsByUserList: [Posts!]!

  """Get List of All Posts By User"""
  AllPostsByUserList: [Posts!]!

  """Get List of All Submitted Posts By User"""
  AllSubmittedPostsByUserList: [Posts!]!

  """Get List of Messages"""
  MessagesList: [Messages!]!
  News(id: String!): News!

  """Get List of News"""
  NewsList: [News!]!
  Partner(id: String!): Partners!

  """Get List of Partners"""
  PartnersList: [Partners!]!
  Posts(id: String!): Posts!

  """Get List of Posts By User"""
  PostsByUserList(id: String!): [Posts!]!

  """Get List of Posts"""
  PostsList: [Posts!]!
  Trip(id: String!): Trip!

  """Get List of Validated Posts"""
  ValidatedPostsList: [Posts!]!
  notes(id: String!): Notes!

  """Get List of Notes"""
  notesList: [Notes!]!
  user(id: String!): Users!

  """Get List of Users"""
  usersList: [Users!]!
}

type RegisterResponse {
  accessToken: String!
  avatar: String!
  email: String!
  firstName: String!
  lastName: String!
  refreshToken: String!
  status: String!
}

type Subscription {
  likeAdded: Posts!
  messageSent: Messages!
  newUserConnected: Users!
}

type ThemeCreatedResponse {
  desc: String!
  id: String!
  intro: String!
  name: String!
}

input ThemesInput {
  desc: String
  id: ID
  intro: String
  name: String
}

"""The Trips Model"""
type Trip {
  id: ID!
  locations: [LocationObject!]!
  start_date: DateTime
}

"""The Users Model"""
type Users {
  active: Boolean
  app_lang: String
  audio: String
  avatar: String
  bio: String
  city: String
  country: String
  createdAt: DateTime!
  email: String
  firstName: String!
  id: ID!
  lang: [String!]!
  lastLogin: DateTime!
  lastName: String!
  password: String
  status: String
  tokenVersion: Float!
  updatedAt: DateTime!
}

input UsersInput {
  active: Boolean
  appLang: String
  audio: String
  avatar: String
  bio: String
  city: String
  country: String
  createdAt: DateTime
  email: String
  firstName: String
  id: ID
  lang: [String!]
  lastLogin: DateTime
  lastName: String
  password: String
  status: String
  updatedAt: DateTime
}

type contentObject {
  AR: String!
  EN: String!
  ES: String!
  FR: String!
  IT: String!
}

type introObject {
  AR: String!
  EN: String!
  ES: String!
  FR: String!
  IT: String!
}

type nameObject {
  AR: String!
  EN: String!
  ES: String!
  FR: String!
  IT: String!
}
